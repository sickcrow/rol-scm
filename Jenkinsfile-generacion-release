def ex(param){
    currentBuild.result = 'ABORTED'
    error('BAD PARAM: ' + param)
}

pipeline {
	agent any
	tools {
		maven 'mvn-3.3.3' 
	}
	parameters {
		string(name: 'RELEASE_NAME', defaultValue: 'NO ES RELEASE', description: ' ej: 2.19.1')
	}
	stages {
		stage('Validate param') {
			steps {
				script {
					if ("${params.RELEASE_NAME}" =~ '[0-9]\\.[0-9][0-9]\\.[0-9]') {
						println "Numero de version valido"
					} else {
						ex("${params.RELEASE_NAME}")
					}
				}
			}
		}
		stage('Build') {
			steps {
				sh 'mvn -B -DskipTests clean package'
			}
		}
		stage('Test') {
			steps {
				sh 'mvn test'
			}
			post {
				always {
					junit 'target/surefire-reports/*.xml'
				}
			}
		}
		stage('Release') {
			steps {
				sh "mvn -U release:clean release:prepare -DreleaseVersion=${params.RELEASE_NAME} --batch-mode"
				sh "mvn release:perform -Dgoals=deploy --batch-mode"
			}
		}
	}
	post {
		always { 
			cleanWs()
		}
		failure {
			mail bcc: '', body: "<b>FAIL</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "ERROR GENERACION RELEASE: Project name -> ${env.JOB_NAME}", to: "vdenicolo@mailexternos.com.ar";
		}
	}
}

